// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VirtoCommerce.CartModule.Data.Repositories;

#nullable disable

namespace VirtoCommerce.CartModule.Data.MySql.Migrations
{
    [DbContext(typeof(CartDbContext))]
    [Migration("20250225105830_AddCartConfigurationItemFile")]
    partial class AddCartConfigurationItemFile
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.AddressEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("AddressType")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("LastName")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Line1")
                        .HasMaxLength(2048)
                        .HasColumnType("varchar(2048)");

                    b.Property<string>("Line2")
                        .HasMaxLength(2048)
                        .HasColumnType("varchar(2048)");

                    b.Property<string>("Name")
                        .HasMaxLength(2048)
                        .HasColumnType("varchar(2048)");

                    b.Property<string>("Organization")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("OuterId")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("PaymentId")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Phone")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("RegionId")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("RegionName")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ShipmentId")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ShoppingCartId")
                        .HasColumnType("varchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("PaymentId");

                    b.HasIndex("ShipmentId");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("CartAddress", (string)null);
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.CartDynamicPropertyObjectValueEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<bool?>("BooleanValue")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateTimeValue")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("DecimalValue")
                        .HasColumnType("decimal(18,5)");

                    b.Property<string>("DictionaryItemId")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<int?>("IntegerValue")
                        .HasColumnType("int");

                    b.Property<string>("LineItemId")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Locale")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("LongTextValue")
                        .HasColumnType("longtext");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ObjectId")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ObjectType")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PaymentId")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("PropertyId")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("PropertyName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("ShipmentId")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ShoppingCartId")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ShortTextValue")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("ValueType")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("LineItemId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("ShipmentId");

                    b.HasIndex("ShoppingCartId");

                    b.HasIndex("ObjectType", "LineItemId")
                        .HasDatabaseName("IX_ObjectType_LineItemId");

                    b.HasIndex("ObjectType", "ObjectId")
                        .HasDatabaseName("IX_CartDynamicPropertyObjectValue_ObjectType_ObjectId");

                    b.HasIndex("ObjectType", "PaymentId")
                        .HasDatabaseName("IX_ObjectType_PaymentId");

                    b.HasIndex("ObjectType", "ShipmentId")
                        .HasDatabaseName("IX_ObjectType_ShipmentId");

                    b.HasIndex("ObjectType", "ShoppingCartId")
                        .HasDatabaseName("IX_ObjectType_ShoppingCartId");

                    b.ToTable("CartDynamicPropertyObjectValue", (string)null);
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.ConfigurationItemEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("CatalogId")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("CategoryId")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CustomText")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(1028)
                        .HasColumnType("varchar(1028)");

                    b.Property<string>("LineItemId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("ProductId")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SectionId")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Sku")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("LineItemId");

                    b.ToTable("CartConfigurationItem", (string)null);
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.ConfigurationItemFileEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ConfigurationItemId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ContentType")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(2083)
                        .HasColumnType("varchar(2083)");

                    b.HasKey("Id");

                    b.HasIndex("ConfigurationItemId");

                    b.ToTable("CartConfigurationItemFile", (string)null);
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.CouponEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Code")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("ShoppingCartId")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("CartCoupon", (string)null);
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.DiscountEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("CouponCode")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<decimal>("DiscountAmount")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<decimal>("DiscountAmountWithTax")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<string>("LineItemId")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("PaymentId")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("PromotionDescription")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("PromotionId")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("PromotionName")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ShipmentId")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ShoppingCartId")
                        .HasColumnType("varchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("LineItemId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("ShipmentId");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("CartDiscount", (string)null);
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.LineItemEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("CatalogId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("CategoryId")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Comment")
                        .HasMaxLength(2048)
                        .HasColumnType("varchar(2048)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<decimal>("DiscountAmount")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<decimal>("DiscountAmountWithTax")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<decimal>("Fee")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<decimal>("FeeWithTax")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<string>("FulfillmentCenterId")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("FulfillmentCenterName")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("FulfillmentLocationCode")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<decimal?>("Height")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(1028)
                        .HasColumnType("varchar(1028)");

                    b.Property<bool>("IsConfigured")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDiscountAmountRounded")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsGift")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsReccuring")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsRejected")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LanguageCode")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<decimal?>("Length")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("ListPrice")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<decimal>("ListPriceWithTax")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<string>("MeasureUnit")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("PriceId")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ProductOuterId")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ProductType")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool>("RequiredShipping")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("SalePrice")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<decimal>("SalePriceWithTax")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<bool>("SelectedForCheckout")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ShipmentMethodCode")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("ShoppingCartId")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<bool>("TaxIncluded")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("TaxPercentRate")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("TaxTotal")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<string>("TaxType")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("ValidationType")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("VendorId")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<decimal?>("VolumetricWeight")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("Weight")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("WeightUnit")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<decimal?>("Width")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("CartLineItem", (string)null);
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.PaymentEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<string>("Comment")
                        .HasMaxLength(2048)
                        .HasColumnType("varchar(2048)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<decimal>("DiscountAmount")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<decimal>("DiscountAmountWithTax")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("OuterId")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("PaymentGatewayCode")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<decimal>("PriceWithTax")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<string>("Purpose")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("ShoppingCartId")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.Property<decimal>("TaxPercentRate")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("TaxTotal")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<string>("TaxType")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<decimal>("Total")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<decimal>("TotalWithTax")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<string>("VendorId")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("CartPayment", (string)null);
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.ProductWishlistEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("longtext");

                    b.Property<string>("ProductId")
                        .HasColumnType("longtext");

                    b.ToTable((string)null);

                    b.ToView("empty", (string)null);
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.ShipmentEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Comment")
                        .HasMaxLength(2048)
                        .HasColumnType("varchar(2048)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<decimal?>("DimensionHeight")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("DimensionLength")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("DimensionUnit")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<decimal?>("DimensionWidth")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("DiscountAmount")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<decimal>("DiscountAmountWithTax")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<decimal>("Fee")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<decimal>("FeeWithTax")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<string>("FulfillmentCenterId")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("FulfillmentCenterName")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<decimal>("PriceWithTax")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<string>("ShipmentMethodCode")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("ShipmentMethodOption")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("ShoppingCartId")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.Property<bool>("TaxIncluded")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("TaxPercentRate")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("TaxTotal")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<string>("TaxType")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<decimal>("Total")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<decimal>("TotalWithTax")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<string>("VendorId")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<decimal?>("VolumetricWeight")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("WeightUnit")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<decimal?>("WeightValue")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("CartShipment", (string)null);
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.ShipmentItemEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("BarCode")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LineItemId")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("ShipmentId")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("LineItemId");

                    b.HasIndex("ShipmentId");

                    b.ToTable("CartShipmentItem", (string)null);
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.ShoppingCartEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<DateTime?>("AbandonmentNotificationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ChannelId")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("CheckoutId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Comment")
                        .HasMaxLength(2048)
                        .HasColumnType("varchar(2048)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(2048)
                        .HasColumnType("varchar(2048)");

                    b.Property<decimal>("DiscountAmount")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<decimal>("DiscountTotal")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<decimal>("DiscountTotalWithTax")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<decimal>("Fee")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<decimal>("FeeWithTax")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<decimal>("HandlingTotal")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<decimal>("HandlingTotalWithTax")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<bool>("IsAnonymous")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsRecuring")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LanguageCode")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<int>("LineItemsCount")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("OrganizationName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("PaymentTotal")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<decimal>("PaymentTotalWithTax")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<string>("PurchaseOrderNumber")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<DateTime?>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)");

                    b.Property<decimal>("ShippingTotal")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<decimal>("ShippingTotalWithTax")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<string>("Status")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("StoreId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<decimal>("SubTotal")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<decimal>("SubTotalWithTax")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<bool>("TaxIncluded")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("TaxPercentRate")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("TaxTotal")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<decimal>("Total")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<string>("Type")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("ValidationType")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId", "StoreId", "ModifiedDate")
                        .HasDatabaseName("IX_CustomerId_StoreId_Date");

                    b.ToTable("Cart", (string)null);
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.TaxDetailEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal");

                    b.Property<string>("LineItemId")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("PaymentId")
                        .HasColumnType("varchar(128)");

                    b.Property<decimal>("Rate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShipmentId")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ShoppingCartId")
                        .HasColumnType("varchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("LineItemId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("ShipmentId");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("CartTaxDetail", (string)null);
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.AddressEntity", b =>
                {
                    b.HasOne("VirtoCommerce.CartModule.Data.Model.PaymentEntity", "Payment")
                        .WithMany("Addresses")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("VirtoCommerce.CartModule.Data.Model.ShipmentEntity", "Shipment")
                        .WithMany("Addresses")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("VirtoCommerce.CartModule.Data.Model.ShoppingCartEntity", "ShoppingCart")
                        .WithMany("Addresses")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("Payment");

                    b.Navigation("Shipment");

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.CartDynamicPropertyObjectValueEntity", b =>
                {
                    b.HasOne("VirtoCommerce.CartModule.Data.Model.LineItemEntity", "LineItem")
                        .WithMany("DynamicPropertyObjectValues")
                        .HasForeignKey("LineItemId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("VirtoCommerce.CartModule.Data.Model.PaymentEntity", "Payment")
                        .WithMany("DynamicPropertyObjectValues")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("VirtoCommerce.CartModule.Data.Model.ShipmentEntity", "Shipment")
                        .WithMany("DynamicPropertyObjectValues")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("VirtoCommerce.CartModule.Data.Model.ShoppingCartEntity", "ShoppingCart")
                        .WithMany("DynamicPropertyObjectValues")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("LineItem");

                    b.Navigation("Payment");

                    b.Navigation("Shipment");

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.ConfigurationItemEntity", b =>
                {
                    b.HasOne("VirtoCommerce.CartModule.Data.Model.LineItemEntity", "LineItem")
                        .WithMany("ConfigurationItems")
                        .HasForeignKey("LineItemId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("LineItem");
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.ConfigurationItemFileEntity", b =>
                {
                    b.HasOne("VirtoCommerce.CartModule.Data.Model.ConfigurationItemEntity", "ConfigurationItem")
                        .WithMany("Files")
                        .HasForeignKey("ConfigurationItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConfigurationItem");
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.CouponEntity", b =>
                {
                    b.HasOne("VirtoCommerce.CartModule.Data.Model.ShoppingCartEntity", "ShoppingCart")
                        .WithMany("Coupons")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.DiscountEntity", b =>
                {
                    b.HasOne("VirtoCommerce.CartModule.Data.Model.LineItemEntity", "LineItem")
                        .WithMany("Discounts")
                        .HasForeignKey("LineItemId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("VirtoCommerce.CartModule.Data.Model.PaymentEntity", "Payment")
                        .WithMany("Discounts")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("VirtoCommerce.CartModule.Data.Model.ShipmentEntity", "Shipment")
                        .WithMany("Discounts")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("VirtoCommerce.CartModule.Data.Model.ShoppingCartEntity", "ShoppingCart")
                        .WithMany("Discounts")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("LineItem");

                    b.Navigation("Payment");

                    b.Navigation("Shipment");

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.LineItemEntity", b =>
                {
                    b.HasOne("VirtoCommerce.CartModule.Data.Model.ShoppingCartEntity", "ShoppingCart")
                        .WithMany("Items")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.PaymentEntity", b =>
                {
                    b.HasOne("VirtoCommerce.CartModule.Data.Model.ShoppingCartEntity", "ShoppingCart")
                        .WithMany("Payments")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.ShipmentEntity", b =>
                {
                    b.HasOne("VirtoCommerce.CartModule.Data.Model.ShoppingCartEntity", "ShoppingCart")
                        .WithMany("Shipments")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.ShipmentItemEntity", b =>
                {
                    b.HasOne("VirtoCommerce.CartModule.Data.Model.LineItemEntity", "LineItem")
                        .WithMany("ShipmentItems")
                        .HasForeignKey("LineItemId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("VirtoCommerce.CartModule.Data.Model.ShipmentEntity", "Shipment")
                        .WithMany("Items")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("LineItem");

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.TaxDetailEntity", b =>
                {
                    b.HasOne("VirtoCommerce.CartModule.Data.Model.LineItemEntity", "LineItem")
                        .WithMany("TaxDetails")
                        .HasForeignKey("LineItemId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("VirtoCommerce.CartModule.Data.Model.PaymentEntity", "Payment")
                        .WithMany("TaxDetails")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("VirtoCommerce.CartModule.Data.Model.ShipmentEntity", "Shipment")
                        .WithMany("TaxDetails")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("VirtoCommerce.CartModule.Data.Model.ShoppingCartEntity", "ShoppingCart")
                        .WithMany("TaxDetails")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("LineItem");

                    b.Navigation("Payment");

                    b.Navigation("Shipment");

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.ConfigurationItemEntity", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.LineItemEntity", b =>
                {
                    b.Navigation("ConfigurationItems");

                    b.Navigation("Discounts");

                    b.Navigation("DynamicPropertyObjectValues");

                    b.Navigation("ShipmentItems");

                    b.Navigation("TaxDetails");
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.PaymentEntity", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Discounts");

                    b.Navigation("DynamicPropertyObjectValues");

                    b.Navigation("TaxDetails");
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.ShipmentEntity", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Discounts");

                    b.Navigation("DynamicPropertyObjectValues");

                    b.Navigation("Items");

                    b.Navigation("TaxDetails");
                });

            modelBuilder.Entity("VirtoCommerce.CartModule.Data.Model.ShoppingCartEntity", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Coupons");

                    b.Navigation("Discounts");

                    b.Navigation("DynamicPropertyObjectValues");

                    b.Navigation("Items");

                    b.Navigation("Payments");

                    b.Navigation("Shipments");

                    b.Navigation("TaxDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
